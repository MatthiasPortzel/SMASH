:root {
  --monospaced: ui-monospace, "Cascadia Code", "Source Code Pro", Menlo, Consolas, "DejaVu Sans Mono", monospace;
  --font-size: 14px; /* Don't go higher by default */

  /* The padding around the outside of the main scrollback/text area.
    All text needs to be inset from the sides of the viewport by this amount. */
  --main-padding: 10px;

  --accent: #FFF18A;
  --background: #222222;
  --text: #eeeeee;
}

*, ::before, ::after {
    box-sizing: border-box;
}

html {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;

    /*  Don't let the content scroll-bounce and show the background */
    overscroll-behavior: none;
}

body {
    background: var(--background);
    height: 100%;
    width: 100%;
    margin: 0;
    position: absolute;

    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    padding: 0;

    color: var(--text);
    font-family: var(--monospaced);
    font-size: var(--font-size);
}

#content {
    width: 100%;
    height: 100%;
}

#scrollback {
    display: block;
    overflow: scroll;

    margin: 0;
    padding: 0;

    /* <start> / <end> */
    grid-column: prompt / padding-right;
    grid-row: scrollback / prompt-command;

    /* This is how we're doing scroll-past-end.
    So that's the whole viewport - one line - a couple px padding*/
    padding-bottom: calc(100vh - var(--font-size) - var(--main-padding));
}

/* also .process-output */
#scrollback pre {
    margin: 0;
    white-space: pre-wrap;
    font-family: var(--monospaced);
    /*  Left and right 10px, top and bottom, 0  */
    padding: 0 var(--main-padding);
}

/* This comment is probably out of date. */
/* The prompt has three parts, the left color block, the bottom color block, and then the wrapper. I don't know if there's a better way to do this with `grid`. I want the padding to be the same here and on the scrollback so I'd rather have the padding defined by the grid than push the prompt wrapper to the edges of the screen in order to have the prompt color blocks inside the prompt wrapper. */
.prompt-color {
    background: var(--accent);
}

.sidebar-overflow-span {
    position: absolute;
    width: 100px;
    align-self: strech; /* Fill to 100% height */
}


/* Wraps the prompt, the command input, the last-output-buttons, and the status bar */
#command.docked {
    position: fixed;
    bottom: 0;
    width: 100%;
}

.command {
    display: flex;
    flex-direction: column;
    padding: 0;
}

#command-input {
    background: var(--background);
}

/* Wraps the prompt and the command test */
.prompt-line {
    display: flex;
    flex-direction: row;
}

.prompt {
    color: black;

    display: flex;
    align-items: center;
}
.prompt span {
    /*padding-top: 5px;*/
    /*padding-bottom: 5px;   */
}

#prompt-color-left {
    grid-column: 1 / prompt;
    grid-row: prompt-command / padding-bottom;
}
#prompt-color-bottom {
    grid-column: 1 / -1;
    grid-row: padding-bottom / end;
}
#triangle {
    display: inline-block;
    width: 25px;
    height: 100%;
    background: var(--accent);
}
#triangle path {
  fill: var(--background);
}

#command-input {
    padding-top: 5px;
    padding-bottom: 5px;

    grid-column: command / padding-right;
    grid-row: prompt-command / padding-bottom;

    outline: none;
    caret-color: var(--accent);

    /*  Otherwise when it has no content, the width is 0 and the cursor doesn't render, even if it's focused  */
    flex-grow: 1;
}
